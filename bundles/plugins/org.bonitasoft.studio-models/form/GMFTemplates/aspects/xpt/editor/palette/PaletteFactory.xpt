/*
 * Copyright (C) 2009 BonitaSoft S.A.
 * BonitaSoft, 31 rue Gustave Eiffel - 38000 Grenoble
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2.0 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«IMPORT 'http://www.eclipse.org/emf/2002/Ecore'»

«EXTENSION xpt::diagram::editparts::Utils»
«EXTENSION xpt::editor::palette::Utils»
«EXTENSION xpt::editor::palette::PaletteFactory»

«AROUND createGroup FOR gmfgen::ToolGroup-»
	«EXPAND xpt::Common::generatedMemberComment('Creates \"' + title + '\" palette tool group')»
	«REM» set to protected«ENDREM»
	protected org.eclipse.gef.palette.PaletteContainer «createMethodName»() {
		«EXPAND xpt::editor::palette::PaletteFactory::newContainer('paletteContainer')-»
		«EXPAND xpt::editor::palette::PaletteFactory::setIdentity('paletteContainer')-»
		«EXPAND xpt::editor::palette::PaletteFactory::setDescription('paletteContainer', self) FOR description-»
		«EXPAND xpt::editor::palette::PaletteFactory::setSmallImage('paletteContainer', palette)-»
		«EXPAND xpt::editor::palette::PaletteFactory::setLargeImage('paletteContainer', palette)-»
		«EXPAND xpt::editor::palette::PaletteFactory::addEntry('paletteContainer') FOREACH entries-»
		return paletteContainer;
	}
«ENDAROUND»


«REM» 
	Replace the extended class to PaletteToolEntry to activate Drag'N'Drop feature
«ENDREM»
«AROUND nodeToolEntry FOR OclAny»
	«EXPAND xpt::Common::generatedClassComment»
	«REM»set it public in order to be subclass in a subclass of PaletteFactory;«ENDREM»
	/**@deprecated WARN : set t public only as a workaround in order to be able be used in a sublcass of PaletteToolEntry*/
	public static class NodeToolEntry extends org.eclipse.gmf.runtime.diagram.ui.internal.services.palette.PaletteToolEntry {

		«EXPAND xpt::Common::generatedMemberComment»
		private final «EXPAND CodeStyle::G('java.util.List', 'org.eclipse.gmf.runtime.emf.type.core.IElementType') FOR diagram» elementTypes;;
		
		«REM»set it public in order to be used in subclass of PaletteFactory.«ENDREM»
		«EXPAND xpt::Common::generatedMemberComment»
		/**@deprecated WARN : set t public only as a workaround in order to be able be used in a sublcass of PaletteToolEntry*/
		public NodeToolEntry(String title, String description, «EXPAND CodeStyle::G('java.util.List', 'org.eclipse.gmf.runtime.emf.type.core.IElementType') FOR diagram» elementTypes) {

			super(null,org.bonitasoft.studio.common.NamingUtils.getFormPaletteTitle(elementTypes), null);
			super.setDescription(org.bonitasoft.studio.common.NamingUtils.getFormPaletteDescription(elementTypes)) ;
			this.elementTypes = elementTypes;
		}

		/**
		* Used a custom tool to have a better feedback.
		* @generated
		*/
		public org.eclipse.gef.Tool createTool() {
«REM»Use a custom tool for palette to have better feedback«ENDREM»
			org.eclipse.gef.Tool tool = new org.bonitasoft.studio.common.diagram.tools.BonitaUnspecifiedTypeCreationTool(elementTypes);
			tool.setProperties(getToolProperties());
			return tool;
		}
	}
«ENDAROUND»